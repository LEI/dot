#!/usr/bin/env bash

set -o nounset
set -o errexit
set -o pipefail

SRC="$(readlink "${BASH_SOURCE[0]}" || realpath "${BASH_SOURCE[0]}")"
DIR="$(cd "$(dirname "$SRC")/.." && pwd -P)"

cd "$DIR"

source ./lib/utils.bash

OPTS="[hnHpcd]"

usage() {
  log "Usage: ${0##*/} --name <remote> --host <user>@<host>:<port> --dir <repo> --git <cmd>"
  exit
}

git_init_bare() {
  local host="$1"
  local dir="$2"
  # ssh "$host" "bash -s" <<'ENDSSH'
# GIT_WORK_TREE="\$HOME/$dir"
# GIT_DIR="\$GIT_WORK_TREE/.git"
# [[ -d "\$GIT_DIR" ]] && exit 0
# mkdir -p "\$GIT_DIR"
# cd "\$GIT_DIR"
# git init --bare
# POST_RECEIVE="\$GIT_DIR/hooks/post-receive"
# echo "#!/usr/bin/env bash
# git --work-tree=\"\$GIT_WORK_TREE\" --git-dir=\"\$GIT_DIR\" checkout -f" > "\$POST_RECEIVE"
# chmod +x \$POST_RECEIVE
# ENDSSH
  ssh "$host" "bash -s" <<< '
GIT_WORK_TREE="$HOME/'"$dir"'"
GIT_DIR="$GIT_WORK_TREE/.git"
[[ -d "$GIT_DIR" ]] && exit 0
mkdir -p "$GIT_DIR"
cd "$GIT_DIR"
git init --bare
POST_RECEIVE="$GIT_DIR/hooks/post-receive"
echo "#!/usr/bin/env bash
git --work-tree="$GIT_WORK_TREE" --git-dir="$GIT_DIR" checkout -f" > "$POST_RECEIVE"
chmod +x $POST_RECEIVE'
}

main() {
  local name host
  local cmd="push"
  local dir=".dot"
  while [[ $# -ne 0 ]]
  do case "$1" in
      --) shift; break ;;
      -h|--help) usage ;;
      -n|--name) shift; name="$1" ;;
      -H|--host) shift; host="$1" ;;
      -c|--cmd) shift; cmd="$1";;
      -d|--dir) shift; dir="$1";;
      --*|'') >&2 log "$1: illegal option $OPTS"; return 1 ;;
      -*) if [[ "$1" =~ ^-[a-zA-Z][a-zA-Z]+$ ]] && [[ "${1:1:1}" =~ $OPTS ]]
        then set -- "${1:0:2}" "-${1:2}" "${@:2}"; continue
        else >&2 log "${1:0:2}: illegal option $OPTS"; return 1
        fi ;;
      *) >&2 log "$1: unrecognized option $OPTS"; return 1
    esac
    shift
  done

  if [[ -z "$name" ]] || [[ -z "$host" ]] || [[ -z "$dir" ]] || [[ -z "$cmd" ]]
  then usage 1
  fi

  git_init_bare "$host" "$dir"

  # Create the git remote if needed
  git remote -v | grep -q "$name.*$host" \
    || git remote add "$name" "ssh://$host/~/$dir/.git"

  # Send files
  git "${cmd:-push}" "$name" "$(git symbolic-ref --short HEAD)"
  # && ssh $host "bash -c \"\$HOME/$dir/bin/dot -R \$HOME/$dir\""
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"
