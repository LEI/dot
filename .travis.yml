sudo: false

language: go

os:
  - linux
  # - osx # brew install docker-compose

services:
  - docker

# cache:
#   directories:
#     - $GOPATH/src
#     - $GOPATH/pkg

stages:
  - test
  - build
  # - name: deploy
  #   # if: branch = master

jobs:
  include:
    - stage: test
      before_script:
        # - sudo apt-get -qq update
        # - sudo apt-get install -y vim tmux
        #- GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
        # - go get ./...
        - go get github.com/golang/lint/golint
        # - go get github.com/mattn/goveralls
      script:
        #- test -z $(gofmt -s -l $GO_FILES)
        - go test -v ./...
        - go vet ./...
        - golint -set_exit_status $(go list ./...)
        # - go install
        # - yes | dot --https
        # # - curl -sfLo ~/.vim/autoload/plug.vim --create-dirs 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        # - tmux new-session -n test "vim -E -s -u $HOME/.vim/vimrc +PlugInstall +qall; exit"
        # - test -d $HOME/.tmux/plugins/tpm
        # - test -d $HOME/.vim/plugged
        # go test -v ./.. -covermode=count -coverprofile=coverage.out
        # - goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
    - stage: build
      install: true
      before_script:
        - docker-compose build
      script:
        # - "for t in tests/docker-compose.*.yml; do docker-compose -f docker-compose.yml -f $t run test; done"
        - docker-compose run test
    - stage: deploy
      # TODO: goreleaser NFPM (.deb, .rpm), Snapcraft (snap)...
      before_deploy:
        # Build into dist and release go program
        - curl -sL https://git.io/goreleaser | bash
        # - mkdir -p dist
        # - GOOS=darwin  GOARCH=amd64 go build -o dist/dot-darwin-amd64
        # - GOOS=linux   GOARCH=amd64 go build -o dist/dot-linux-amd64
        # - go get github.com/inconshreveable/mousetrap
        # - GOOS=windows GOARCH=amd64 go build -o dist/dot-windows-amd64.exe
      # after_success:
      #   # docker login is required if you want to push docker images.
      #   # DOCKER_PASSWORD should be a secret in your .travis.yml configuration.
      #   - test -n "$TRAVIS_TAG" && docker login -u=myuser -p="$DOCKER_PASSWORD"
      deploy: # goreleaser can also handle ghreleases?
        provider: releases
        # prerelease: true
        # draft: true
        api_key:
          secure: "$DEPLOY_API_KEY"
        file: dist/*
        file_glob: true
        skip_cleanup: true
        on:
          repo: LEI/dot
          tags: true
          condition: $TRAVIS_OS_NAME = linux

notifications:
  email: false
