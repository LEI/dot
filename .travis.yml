sudo: false

services:
  - docker

language: go

# go:
#   - "1.x"
#   - "1.8"
#   - "1.10.x"
#   - master

os:
  - linux

matrix:
  allow_failures:
    - go: master
  fast_finish: true

# cache:
#   directories:
#     # - $GOPATH/bin
#     # - $GOPATH/pkg/dep
#     # - $GOPATH/src/github.com/LEI/dot/dist
#     - $GOPATH/src/github.com/LEI/dot/vendor

branches:
  only:
  - master

# Only build tags
if: tag IS present

# # https://github.com/travis-ci/travis-ci/issues/5032
# before_install:
#   - if echo "$TRAVIS_COMMIT_MESSAGE" | grep -F -q "[skip travis]"; then exit 0; fi

stages:
  - build
  - test
  - deploy

# install:
#   - make

# after_success:
#   - go run build.go coverage
#   - bash <(curl -s https://codecov.io/bash)

jobs:
  include:

    - stage: build
      # install: skip
      script:
        # - go run build.go -v
        # - dot --version
        # - dot install --help
        - go run build.go vendor check install

    - &base
      stage: test
      script:
        - go run build.go -v vendor docker
      env: OS=debian

    - <<: *base
      env: OS=alpine

    - <<: *base
      env: OS=archlinux

    - <<: *base
      env: OS=centos

    - <<: *base
      env: OS=debian

    - stage: test
      script:
        - brew --version
        # - (cd "$(brew --repo)" && git fetch && git reset --hard origin/master && brew update)
        - export HOMEBREW_NO_ANALYTICS=1
        - export HOMEBREW_NO_AUTO_UPDATE=1
        - export HOMEBREW_NO_EMOJI=1
        # - brew update --quiet
        # - brew upgrade --quiet || true
        # brew 1.6.9 -> no quiet option?
        - brew install --quiet gnu-sed --with-default-names
        - if test ! -d $GOPATH/bin; then mkdir $GOPATH/bin; fi
        - go run build.go vendor check install
          # - go run build.go build:darwin
        # - cp dist/darwin_amd64/dot /usr/local/bin/dot
        - cp .dotrc.yml $HOME/
        - scripts/e2e-test.sh
      env: OS=darwin
      os: osx
      language: go

    - stage: deploy
      addons:
        apt:
          packages:
          - rpm
          - snapd
      env:
        - PATH=/snap/bin:$PATH
      before_deploy:
        - sudo snap install snapcraft --classic
      deploy:
        provider: script
        # script: curl -sL https://git.io/goreleaser | bash
        script: go run build.go vendor -only release
        skip_cleanup: true
        on:
          repo: LEI/dot
          tags: true
          condition: $TRAVIS_OS_NAME = linux

notifications:
  email: false
