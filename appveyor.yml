# https://github.com/gohugoio/hugo/blob/master/appveyor.yml
# https://github.com/joefitzgerald/go-plus/blob/master/appveyor.yml<Paste>
# https://blog.markvincze.com/setting-up-an-appveyor-pipeline-for-golang/

# https://github.com/joaope/LocalAppVeyor
# brew cask install dotnet dotnet-sdk
# dotnet tool install -g localappveyor --version 0.5.0-alpha9
# LocalAppVeyor lint --token ...

image: Visual Studio 2017

# version: 1.0.0.{build}

platform: x64

branches:
  only:
    - master

environment:
  CYG_ROOT: C:\cygwin64
  CYG_MIRROR: http://cygwin.mirror.constant.com
  CYG_CACHE: C:\cygwin64\var\cache\setup
  CYG_BASH: C:\cygwin64\bin\bash
  # CGO_ENABLED: 0 # Required (1) for go test -race
  GOPATH: C:\gopath\
  # DOT_BUILD_TAGS:
  # OS: windows

cache:
  - '%CYG_CACHE%'

init:
    - git config --global core.autocrlf input
  # - set PATH=%PATH:C:\MinGW\bin;=%
  # - C:\msys64\usr\bin\sh.exe --login /c/projects/dot/scripts/setup-win.sh
  - set PATH=%PATH%;C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin;%GOPATH%\bin
  - go version
  - go env

# clones and cd's to path
clone_folder: C:\gopath\src\github.com\LEI\dot

# install:
#   - '%CYG_ROOT%\setup-x86_64.exe --quiet-mode --no-shortcuts --upgrade-also --packages autoconf,autogen,automake,cygwin-devel,git,gcc-core,gcc-g++,libncurses-devel,libprotobuf-devel,make,openssh,openssl-devel,perl,perl_pods,pkg-config,tmux,zlib-devel'
#   - '%CYG_ROOT%\bin\cygcheck -dc cygwin'
#   # - gem install asciidoctor
#   # - pip install docutils
#   # - go get ...

before_build:
  - touch C:\Users\appveyor\.dotnc
  # - cp C:\projects\dot\.dotrc.yml C:\Users\appveyor\.dotrc.yml
  # - '%CYG_BASH% -lc "git config --local core.symlinks true"'
  # - '%CYG_BASH% -lc "git clean --force --quiet -x -d"'
  # - '%CYG_BASH% -lc "git reset --hard"'

build_script:
  # - '%CYG_BASH% -lc "./autogen.sh"'
  # - '%CYG_BASH% -lc "./configure --enable-compile-warnings=error --enable-examples"'
  # - '%CYG_BASH% -lc "make distcheck VERBOSE=1 V=1"'
  - '%CYG_BASH% -lc "echo $PWD; echo $HOME; ls -la"'
  - echo %USERPROFILE%
  - pwd
  - echo %PWD%

  - go run build.go vendor check install # testRace
  - ls -la C:/
  - go run build.go build:windows
  - ls -la

  - dot --version
  # - dot ls
  - '%CYG_BASH% -lc "dot sync --verbose"'
  - '%CYG_BASH% -lc "dot install --packages --verbose"'

  # - choco install --yes --no-progress docker-compose
  # - OS=windows go run build.go -v docker
  # - docker-compose build test_os
  # - docker-compose up test_os
# artifacts:
#   - path: .\dist\windows_amd64\dot
#     name: "Dot Windows binary"
