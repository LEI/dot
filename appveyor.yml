# https://github.com/golang/dep/blob/master/appveyor.yml
# https://github.com/gohugoio/hugo/blob/master/appveyor.yml
# https://github.com/joefitzgerald/go-plus/blob/master/appveyor.yml<Paste>
# https://blog.markvincze.com/setting-up-an-appveyor-pipeline-for-golang/

# https://github.com/joaope/LocalAppVeyor
# brew cask install dotnet dotnet-sdk
# dotnet tool install -g localappveyor --version 0.5.0-alpha9
# LocalAppVeyor lint --token ...

image: Visual Studio 2017

# version: 1.0.0.{build}

platform: x64

branches:
  only:
    - master

skip_non_tags: true

skip_commits:
  message: /.*\[skip appveyor\].*/

environment:
  CYG_MIRROR: http://cygwin.mirror.constant.com
  # CGO_ENABLED: 0 # Required (1) for go test -race
  GOPATH: C:\gopath
  # DOT_BUILD_TAGS:
  # OS: windows
  matrix:
    # - CYG_ARCH: x86
    #   CYG_ROOT: C:/cygwin
    #   CYG_SETUP: setup-x86.exe
    #   CYG_CACHE: C:/cygwin/var/cache/setup
    - CYG_ARCH: x86_64
      CYG_ROOT: C:/cygwin64
      CYG_SETUP: setup-x86_64.exe
      CYG_CACHE: C:/cygwin64/var/cache/setup

cache:
  - '%CYG_CACHE%'

init:
  - git config --global core.autocrlf input
  # - set PATH=%PATH:C:\MinGW\bin;=%
  # - C:\msys64\usr\bin\sh.exe --login /c/projects/dot/scripts/setup-win.sh
  # - C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  - set PATH=%PATH%;%CYG_ROOT%\bin;%GOPATH%\bin
  - go version
  - go env

# clones and cd's to path
clone_folder: C:\gopath\src\github.com\LEI\dot

install:
  # autoconf,autogen,automake,cygwin-devel,git,gcc-core,gcc-g++,libncurses-devel,libprotobuf-devel,make,openssh,openssl-devel,perl,perl_pods,pkg-config,tmux,zlib-devel
  # - '%CYG_ROOT%\setup-x86_64.exe --quiet-mode --no-shortcuts --upgrade-also --packages git,wget'
  # - '%CYG_ROOT%\%CYG_SETUP% --quiet-mode --no-shortcuts --upgrade-also --site $CYG_MIRROR  --local-package-dir "%CYG_CACHE%" --packages git'
  - '%CYG_ROOT%\%CYG_SETUP% --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages gawk,wget'
  #  > NUL 2>&1
  - '%CYG_ROOT%\bin\cygcheck -dc cygwin'
  # - gem install asciidoctor
  # - pip install docutils
  # - go get ...

before_build:
  # - 'bash -lc "cygcheck -dc cygwin"'
  # - 'bash -lc "git config --local core.symlinks true"'
  # - 'bash -lc "git clean --force --quiet -x -d"'
  # - 'bash -lc "git reset --hard"'
  - 'bash -lc "curl -sSL https://rawgit.com/transcode-open/apt-cyg/master/apt-cyg -o apt-cyg"'
  # - 'bash -lc "apt-cyg --version"'
  - 'bash -lc "install apt-cyg /bin"'
  - 'bash -lc "ls -l /usr/bin/*awk"'
  # c:\cygwin setup.exe -q -P wget,tar,qawk,bzip2,subversion,vim
  - 'bash -lc "apt-cyg install wget"'
  # - 'bash -lc "echo $PATH"'
  # - echo %PATH%
  # - cp C:\projects\dot\.dotrc.yml C:\Users\appveyor\.dotrc.yml
  # - 'bash -lc "cp /c/gopath/src/github.com/LEI/dot/.dotrc.yml $HOME/.dotrc.yml"'

build_script:
  # - 'bash -lc "./autogen.sh"'
  # - 'bash -lc "./configure --enable-compile-warnings=error --enable-examples"'
  # - 'bash -lc "make distcheck VERBOSE=1 V=1"'
  # - echo %USERPROFILE%

  - touch C:\Users\appveyor\.dotnc
  # - 'bash -lc "touch $HOME/.dotnc"'

  - go run build.go vendor -only check install # testRace
  # - go run build.go vendor -only check build:windows
  # - 'bash -lc "cp /c/gopath/src/github.com/LEI/dot/dist/windows_amd64/dot /usr/local/bin/dot"'
  # - 'bash -lc "ls -la /usr/local/bin"'
  # - 'bash -lc "dot --version"'

  - dot --release
  - 'bash -lc "dot sync --verbose"'
  - 'bash -lc "dot install --packages --verbose"'

  # - choco install --yes --no-progress docker-compose
  # - OS=windows go run build.go -v docker
  # - docker-compose build test_os
  # - docker-compose up test_os

# artifacts:
#   - path: .\dist\windows_amd64\dot
#     name: "Dot Windows binary"
