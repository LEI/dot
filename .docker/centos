# vi: ft=Dockerfile
FROM centos

ENV OS linux
ENV ARCH amd64
ENV USER docker

# RUN printf "errorlevel=0\nrpmverbosity=critical\n" >> /etc/yum.conf

# yum groupinstall --assumeyes --quiet "Development Tools" && \
# yum install --assumeyes --quiet \
# gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel \
# ca-certificates \
RUN yum update --assumeyes --quiet && \
yum install --assumeyes --quiet \
curl-devel expat-devel gettext-devel openssl-devel zlib-devel \
gcc perl-ExtUtils-MakeMaker \
kernel-devel ncurses-devel \
autoconf make \
sudo
# epel-release

# Install latest git instead of 1.8
ENV GIT_VERSION 2.18.0
# ADD https://github.com/git/git/archive/v$GIT_VERSION.tar.gz git.tar.gz
RUN curl -sSL -o git.tar.gz https://github.com/git/git/archive/v$GIT_VERSION.tar.gz && \
tar -zxf git.tar.gz && \
cd git-$GIT_VERSION && \
make configure && \
./configure --prefix=/usr/local && \
sudo make install

# Install latest tmux instead of 1.8
ENV LIBEVENT_VERSION 2.0.22
RUN curl -sSL -o libevent.tar.gz https://github.com/libevent/libevent/releases/download/release-$LIBEVENT_VERSION-stable/libevent-$LIBEVENT_VERSION-stable.tar.gz && \
tar -xzf libevent.tar.gz && \
cd libevent-$LIBEVENT_VERSION-stable && \
./configure --prefix=/usr/local && \
make && \
sudo make install
ENV TMUX_VERSION 2.7
# RUN git clone https://github.com/tmux/tmux.git && \
RUN curl -sSL -o tmux.tar.gz https://github.com/tmux/tmux/releases/download/$TMUX_VERSION/tmux-$TMUX_VERSION.tar.gz && \
tar -zxf tmux.tar.gz && \
cd tmux-$TMUX_VERSION && \
LDFLAGS="-L/usr/local/lib -Wl,-rpath=/usr/local/lib" ./configure --prefix=/usr/local && \
make && \
sudo make install

COPY ./dist/${OS}_${ARCH}/dot /usr/local/bin/dot
COPY ./scripts /tmp/scripts

# RUN /tmp/scripts/setup-lang.sh
# ENV LANG en_GB.UTF-8
# ENV LANGUAGE en_GB:en
# ENV LC_ALL en_GB.UTF-8

RUN groupadd sudo
RUN sed -i -e 's#Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin#Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin#' /etc/sudoers
RUN /tmp/scripts/setup-user.sh --groups sudo --password '' $USER

# Pre-install pacapt
ADD https://github.com/icy/pacapt/raw/ng/pacapt /usr/local/bin/pacapt
RUN sudo chmod 755 /usr/local/bin/pacapt

USER $USER

WORKDIR /home/$USER

COPY ./.dot.yml .dot.yml

#RUN dot install --packages --sudo

ENTRYPOINT ["/bin/bash"]
